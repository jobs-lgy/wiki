(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{193:function(t,a,e){"use strict";e.r(a);var s=e(0),r=Object(s.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"docker仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" Docker仓库")]),t._v(" "),e("p",[t._v("##概述")]),t._v(" "),e("p",[t._v("镜像构建完成后，可以很容易的在当前宿主机上运行，但是，如果需要在其它服务器上使用这个镜像，我们就需要一个集中的存储、分发镜像的服务，"),e("code",[t._v("Docker Registry")]),t._v(" 就是这样的服务。")]),t._v(" "),e("p",[t._v("一个 "),e("strong",[t._v("Docker Registry")]),t._v(" 中可以包含多个"),e("strong",[t._v("仓库")]),t._v("（"),e("code",[t._v("Repository")]),t._v("）；每个仓库可以包含多个"),e("strong",[t._v("标签")]),t._v("（"),e("code",[t._v("Tag")]),t._v("）；每个标签对应一个镜像。")]),t._v(" "),e("p",[t._v("通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本。我们可以通过 "),e("code",[t._v("<仓库名>:<标签>")]),t._v(" 的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 "),e("code",[t._v("latest")]),t._v(" 作为默认标签。")]),t._v(" "),e("p",[t._v("以 "),e("a",{attrs:{href:"https://store.docker.com/images/ubuntu",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ubuntu 镜像"),e("OutboundLink")],1),t._v(" 为例，"),e("code",[t._v("ubuntu")]),t._v(" 是仓库的名字，其内包含有不同的版本标签，如，"),e("code",[t._v("14.04")]),t._v(", "),e("code",[t._v("16.04")]),t._v("。我们可以通过 "),e("code",[t._v("ubuntu:14.04")]),t._v("，或者 "),e("code",[t._v("ubuntu:16.04")]),t._v(" 来具体指定所需哪个版本的镜像。如果忽略了标签，比如 "),e("code",[t._v("ubuntu")]),t._v("，那将视为 "),e("code",[t._v("ubuntu:latest")]),t._v("。")]),t._v(" "),e("p",[t._v("仓库名经常以 "),e("em",[t._v("两段式路径")]),t._v(" 形式出现，比如 "),e("code",[t._v("jwilder/nginx-proxy")]),t._v("，前者往往意味着 Docker Registry 多用户环境下的用户名，后者则往往是对应的软件名。但这并非绝对，取决于所使用的具体 Docker Registry 的软件或服务。")]),t._v(" "),e("h2",{attrs:{id:"公有仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#公有仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 公有仓库")]),t._v(" "),e("p",[t._v("Docker Registry 公开服务是开放给用户使用、允许用户管理镜像的 Registry 服务。一般这类公开服务允许用户免费上传、下载公开的镜像，并可能提供收费服务供用户管理私有镜像。")]),t._v(" "),e("p",[t._v("最常使用的 Registry 公开服务是官方的 "),e("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Hub"),e("OutboundLink")],1),t._v("，这也是默认的 Registry，并拥有大量的高质量的官方镜像。除此以外，还有 "),e("a",{attrs:{href:"https://coreos.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CoreOS"),e("OutboundLink")],1),t._v(" 的 "),e("a",{attrs:{href:"https://quay.io/repository/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Quay.io"),e("OutboundLink")],1),t._v("，CoreOS 相关的镜像存储在这里；Google 的 "),e("a",{attrs:{href:"https://cloud.google.com/container-registry/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Google Container Registry"),e("OutboundLink")],1),t._v("，"),e("a",{attrs:{href:"http://kubernetes.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kubernetes"),e("OutboundLink")],1),t._v(" 的镜像使用的就是这个服务。")]),t._v(" "),e("p",[t._v("由于某些原因，在国内访问这些服务可能会比较慢。国内的一些云服务商提供了针对 Docker Hub 的镜像服务（"),e("code",[t._v("Registry Mirror")]),t._v("），这些镜像服务被称为"),e("strong",[t._v("加速器")]),t._v("。常见的有 "),e("a",{attrs:{href:"https://cr.console.aliyun.com/#/accelerator",target:"_blank",rel:"noopener noreferrer"}},[t._v("阿里云加速器"),e("OutboundLink")],1),t._v("、"),e("a",{attrs:{href:"https://www.daocloud.io/mirror#accelerator-doc",target:"_blank",rel:"noopener noreferrer"}},[t._v("DaoCloud 加速器"),e("OutboundLink")],1),t._v(" 等。使用加速器会直接从国内的地址下载 Docker Hub 的镜像，比直接从 Docker Hub 下载速度会提高很多。")]),t._v(" "),e("p",[t._v("国内也有一些云服务商提供类似于 Docker Hub 的公开服务。比如 "),e("a",{attrs:{href:"https://hub.tenxcloud.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("时速云镜像仓库"),e("OutboundLink")],1),t._v("、"),e("a",{attrs:{href:"https://c.163.com/hub#/m/library/",target:"_blank",rel:"noopener noreferrer"}},[t._v("网易云镜像服务"),e("OutboundLink")],1),t._v("、"),e("a",{attrs:{href:"https://hub.daocloud.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("DaoCloud 镜像市场"),e("OutboundLink")],1),t._v("、"),e("a",{attrs:{href:"https://cr.console.aliyun.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("阿里云镜像库"),e("OutboundLink")],1),t._v(" 等。")]),t._v(" "),e("h2",{attrs:{id:"私有仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#私有仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 私有仓库")]),t._v(" "),e("p",[t._v("除了使用公开服务外，用户还可以在本地搭建私有 Docker Registry。Docker 官方提供了 "),e("a",{attrs:{href:"https://store.docker.com/images/registry/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Registry"),e("OutboundLink")],1),t._v(" 镜像，可以直接使用做为私有 Registry 服务。")]),t._v(" "),e("p",[t._v("开源的 Docker Registry 镜像只提供了 "),e("a",{attrs:{href:"https://docs.docker.com/registry/spec/api/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Registry API"),e("OutboundLink")],1),t._v(" 的服务端实现，足以支持 "),e("code",[t._v("docker")]),t._v(" 命令，不影响使用。但不包含图形界面，以及镜像维护、用户管理、访问控制等高级功能。在官方的商业化版本 "),e("a",{attrs:{href:"https://docs.docker.com/datacenter/dtr/2.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Trusted Registry"),e("OutboundLink")],1),t._v(" 中，提供了这些高级功能。")]),t._v(" "),e("p",[t._v("除了官方的 Docker Registry 外，还有第三方软件实现了 Docker Registry API，甚至提供了用户界面以及一些高级功能。比如，"),e("a",{attrs:{href:"https://github.com/vmware/harbor",target:"_blank",rel:"noopener noreferrer"}},[t._v("VMWare Harbor"),e("OutboundLink")],1),t._v(" 和 "),e("a",{attrs:{href:"https://www.sonatype.com/docker",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sonatype Nexus"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"仓库使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#仓库使用","aria-hidden":"true"}},[t._v("#")]),t._v(" 仓库使用")]),t._v(" "),e("p",[t._v("仓库（"),e("code",[t._v("Repository")]),t._v("）是集中存放镜像的地方。")]),t._v(" "),e("p",[t._v("一个容易混淆的概念是注册服务器（"),e("code",[t._v("Registry")]),t._v("）。实际上注册服务器是管理仓库的具体服务器，每个服务器上可以有多个仓库，而每个仓库下面有多个镜像。从这方面来说，仓库可以被认为是一个具体的项目或目录。例如对于仓库地址 "),e("code",[t._v("dl.dockerpool.com/ubuntu")]),t._v(" 来说，"),e("code",[t._v("dl.dockerpool.com")]),t._v(" 是注册服务器地址，"),e("code",[t._v("ubuntu")]),t._v(" 是仓库名。")]),t._v(" "),e("h3",{attrs:{id:"注册"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注册","aria-hidden":"true"}},[t._v("#")]),t._v(" 注册")]),t._v(" "),e("p",[t._v("目前 Docker 官方维护了一个公共仓库 "),e("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Hub"),e("OutboundLink")],1),t._v("，其中已经包括了数量超过 15,000 的镜像。大部分需求都可以通过在 Docker Hub 中直接下载镜像来实现。")]),t._v(" "),e("p",[t._v("你可以在 https://cloud.docker.com 免费注册一个 Docker 账号。")]),t._v(" "),e("p",[t._v("可以通过执行 "),e("code",[t._v("docker login")]),t._v(" 命令交互式的输入用户名及密码来完成在命令行界面登录 Docker Hub。")]),t._v(" "),e("p",[t._v("你可以通过 "),e("code",[t._v("docker logout")]),t._v(" 退出登录。")]),t._v(" "),e("h3",{attrs:{id:"拉取镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拉取镜像","aria-hidden":"true"}},[t._v("#")]),t._v(" 拉取镜像")]),t._v(" "),e("p",[t._v("你可以通过 "),e("code",[t._v("docker search")]),t._v(" 命令来查找官方仓库中的镜像，并利用 "),e("code",[t._v("docker pull")]),t._v(" 命令来将它下载到本地。")]),t._v(" "),e("p",[t._v("例如以 "),e("code",[t._v("centos")]),t._v(" 为关键词进行搜索：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ docker search centos\nNAME                                            DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED\ncentos                                          The official build of CentOS.                   465       "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OK"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ntianon/centos                                   CentOS 5 and 6, created using rinse instea"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".   28\nblalor/centos                                   Bare-bones base CentOS 6.5 image                6                    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OK"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nsaltstack/centos-6-minimal                                                                      6                    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OK"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ntutum/centos-6.4                                DEPRECATED. Use tutum/centos:6.4 instead. "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".   5                    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OK"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("可以看到返回了很多包含关键字的镜像，其中包括镜像名字、描述、收藏数（表示该镜像的受关注程度）、是否官方创建、是否自动创建。")]),t._v(" "),e("p",[t._v("官方的镜像说明是官方项目组创建和维护的，automated 资源允许用户验证镜像的来源和内容。")]),t._v(" "),e("p",[t._v("根据是否是官方提供，可将镜像资源分为两类。")]),t._v(" "),e("p",[t._v("一种是类似 "),e("code",[t._v("centos")]),t._v(" 这样的镜像，被称为基础镜像或根镜像。这些基础镜像由 Docker 公司创建、验证、支持、提供。这样的镜像往往使用单个单词作为名字。")]),t._v(" "),e("p",[t._v("还有一种类型，比如 "),e("code",[t._v("tianon/centos")]),t._v(" 镜像，它是由 Docker 的用户创建并维护的，往往带有用户名称前缀。可以通过前缀 "),e("code",[t._v("username/")]),t._v(" 来指定使用某个用户提供的镜像，比如 tianon 用户。")]),t._v(" "),e("p",[t._v("另外，在查找的时候通过 "),e("code",[t._v("--filter=stars=N")]),t._v(" 参数可以指定仅显示收藏数量为 "),e("code",[t._v("N")]),t._v(" 以上的镜像。")]),t._v(" "),e("p",[t._v("下载官方 "),e("code",[t._v("centos")]),t._v(" 镜像到本地。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ docker pull centos\nPulling repository centos\n0b443ba03958: Download complete\n539c0211cd76: Download complete\n511136ea3c5a: Download complete\n7064731afe90: Download complete\n")])])]),e("h3",{attrs:{id:"推送镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推送镜像","aria-hidden":"true"}},[t._v("#")]),t._v(" 推送镜像")]),t._v(" "),e("p",[t._v("用户也可以在登录后通过 "),e("code",[t._v("docker push")]),t._v(" 命令来将自己的镜像推送到 Docker Hub。")]),t._v(" "),e("p",[t._v("以下命令中的 "),e("code",[t._v("username")]),t._v(" 请替换为你的 Docker 账号用户名。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ docker tag ubuntu:17.10 username/ubuntu:17.10\n\n$ docker image "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\n\nREPOSITORY                                               TAG                    IMAGE ID            CREATED             SIZE\nubuntu                                                   17.10                  275d79972a86        6 days ago          94.6MB\nusername/ubuntu                                          17.10                  275d79972a86        6 days ago          94.6MB\n\n$ docker push username/ubuntu:17.10\n\n$ docker search username\n\nNAME                      DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED\nusername/ubuntu\n")])])]),e("h3",{attrs:{id:"自动创建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自动创建","aria-hidden":"true"}},[t._v("#")]),t._v(" 自动创建")]),t._v(" "),e("p",[t._v("自动创建（Automated Builds）功能对于需要经常升级镜像内程序来说，十分方便。")]),t._v(" "),e("p",[t._v("有时候，用户创建了镜像，安装了某个软件，如果软件发布新版本则需要手动更新镜像。")]),t._v(" "),e("p",[t._v("而自动创建允许用户通过 Docker Hub 指定跟踪一个目标网站（目前支持 "),e("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub"),e("OutboundLink")],1),t._v(" 或 "),e("a",{attrs:{href:"https://bitbucket.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("BitBucket"),e("OutboundLink")],1),t._v("）上的项目，一旦项目发生新的提交或者创建新的标签（tag），Docker Hub 会自动构建镜像并推送到 Docker Hub 中。")]),t._v(" "),e("p",[t._v("要配置自动创建，包括如下的步骤：")]),t._v(" "),e("ul",[e("li",[t._v("创建并登录 Docker Hub，以及目标网站；")]),t._v(" "),e("li",[t._v("在目标网站中连接帐户到 Docker Hub；")]),t._v(" "),e("li",[t._v("在 Docker Hub 中 "),e("a",{attrs:{href:"https://registry.hub.docker.com/builds/add/",target:"_blank",rel:"noopener noreferrer"}},[t._v("配置一个自动创建"),e("OutboundLink")],1),t._v("；")]),t._v(" "),e("li",[t._v("选取一个目标网站中的项目（需要含 "),e("code",[t._v("Dockerfile")]),t._v("）和分支；")]),t._v(" "),e("li",[t._v("指定 "),e("code",[t._v("Dockerfile")]),t._v(" 的位置，并提交创建。")])]),t._v(" "),e("p",[t._v("之后，可以在 Docker Hub 的 "),e("a",{attrs:{href:"https://registry.hub.docker.com/builds/",target:"_blank",rel:"noopener noreferrer"}},[t._v("自动创建页面"),e("OutboundLink")],1),t._v(" 中跟踪每次创建的状态。")]),t._v(" "),e("h2",{attrs:{id:"安装私有仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装私有仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装私有仓库")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://docs.docker.com/registry/",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("docker-registry")]),e("OutboundLink")],1),t._v(" 是官方提供的工具，可以用于构建私有的镜像仓库。")]),t._v(" "),e("h3",{attrs:{id:"安装运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装运行","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装运行")]),t._v(" "),e("p",[t._v("你可以通过获取官方 "),e("code",[t._v("registry")]),t._v(" 镜像来运行。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("docker run -d -p 5000:5000 --restart"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("always --name registry registry\n")])])]),e("p",[t._v("这将使用官方的 "),e("code",[t._v("registry")]),t._v(" 镜像来启动私有仓库。默认情况下，仓库会被创建在容器的 "),e("code",[t._v("/var/lib/registry")]),t._v(" 目录下。你可以通过 "),e("code",[t._v("-v")]),t._v(" 参数来将镜像文件存放在本地的指定路径。例如下面的例子将上传的镜像放到本地的 "),e("code",[t._v("/opt/registry")]),t._v(" 目录。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("docker run -d \\\n    -p 5000:5000 \\\n    -v /usr/local/docker/registry:/var/lib/registry \\\n    --restart"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("always --name registry registry\n")])])]),e("h3",{attrs:{id:"在私有仓库上传、搜索、下载镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在私有仓库上传、搜索、下载镜像","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("strong",[t._v("在私有仓库上传、搜索、下载镜像")])]),t._v(" "),e("p",[t._v("创建好私有仓库之后，就可以使用 "),e("code",[t._v("docker tag")]),t._v(" 来标记一个镜像，然后推送它到仓库。例如私有仓库地址为 "),e("code",[t._v("192.168.56.100:5000")]),t._v("。")]),t._v(" "),e("p",[t._v("先在本机查看已有的镜像。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ docker image "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nREPOSITORY           TAG                 IMAGE ID            CREATED             SIZE\ndocker.io/registry   latest              f32a97de94e1        4 months ago        25.8 MB\n")])])]),e("p",[t._v("使用 "),e("code",[t._v("docker tag")]),t._v(" 将 "),e("code",[t._v("redis:latest")]),t._v(" 这个镜像标记为"),e("code",[t._v("192.168.56.100:5000/redis:latest")]),t._v("。")]),t._v(" "),e("p",[t._v("格式为 "),e("code",[t._v("docker tag IMAGE[:TAG] [REGISTRY_HOST[:REGISTRY_PORT]/]REPOSITORY[:TAG]")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ docker tag redis:latest 192.168.56.100:5000/redis:latest\n$ docker image "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nREPOSITORY                        TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nubuntu                            latest              ba5877dc9bec        6 weeks ago         192.7 MB\n127.0.0.1:5000/ubuntu:latest      latest              ba5877dc9bec        6 weeks ago         192.7 MB\n")])])]),e("p",[t._v("使用 "),e("code",[t._v("docker push")]),t._v(" 上传标记的镜像。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ docker push 192.168.56.100:5000/redis:latest\nThe push refers to repository "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("127.0.0.1:5000/ubuntu"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n373a30c24545: Pushed\na9148f5200b0: Pushed\ncdd3de0940ab: Pushed\nfc56279bbb33: Pushed\nb38367233d37: Pushed\n2aebd096e0e2: Pushed\nlatest: digest: sha256:fe4277621f10b5026266932ddf760f5a756d2facd505a94d2da12f4f52f71f5a size: 1568\n")])])]),e("p",[t._v("用 "),e("code",[t._v("curl")]),t._v(" 查看仓库中的镜像。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" 192.168.56.100:5000/v2/_catalog\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"repositories"')]),t._v(":"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redis"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("这里可以看到 "),e("code",[t._v('{"repositories":["redis"]}')]),t._v("，表明镜像已经被成功上传了。")]),t._v(" "),e("p",[t._v("先删除已有镜像，再尝试从私有仓库中下载这个镜像。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ docker image "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" 192.168.56.100:5000/redis:latest\n\n$ docker pull 192.168.56.100:5000/redis:latest\nPulling repository 192.168.56.100:5000/redis:latest\nba5877dc9bec: Download complete\n511136ea3c5a: Download complete\n9bad880da3d2: Download complete\n25f11f5fb0cb: Download complete\nebc34468f71d: Download complete\n")])])]),e("p",[t._v("出现异常：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("error creating overlay mount to /var/lib/docker/overlay2/d5ec90fdf5e2da4b407cbeaf85a4f196b803ffe21118ba5cda7499e5df229567/merged: no such file or directory\n")])])]),e("p",[t._v("修改存储类型：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/sysconfig/docker-storage\n")])])]),e("p",[t._v("把空的DOCKER_STORAGE_OPTIONS参数改为overlay:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("DOCKER_STORAGE_OPTIONS"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--storage-driver overlay"')]),t._v("\n")])])]),e("p",[t._v("启动docker应该就可以了")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("systemctl restart docker\n")])])]),e("h3",{attrs:{id:"注意事项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注意事项","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("strong",[t._v("注意事项")])]),t._v(" "),e("p",[t._v("如果你不想使用 "),e("code",[t._v("127.0.0.1:5000")]),t._v(" 作为仓库地址，比如想让本网段的其他主机也能把镜像推送到私有仓库。你就得把例如 "),e("code",[t._v("192.168.56.100:5000")]),t._v(" 这样的内网地址作为私有仓库地址，这时你会发现无法成功推送镜像。")]),t._v(" "),e("p",[t._v("这是因为 Docker 默认不允许非 "),e("code",[t._v("HTTPS")]),t._v(" 方式推送镜像。我们可以通过 Docker 的配置选项来取消这个限制，或者查看下一节配置能够通过 "),e("code",[t._v("HTTPS")]),t._v(" 访问的私有仓库。")]),t._v(" "),e("h4",{attrs:{id:"ubuntu-14-04-debian-7-wheezy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-14-04-debian-7-wheezy","aria-hidden":"true"}},[t._v("#")]),t._v(" Ubuntu 14.04, Debian 7 Wheezy")]),t._v(" "),e("p",[t._v("对于使用 "),e("code",[t._v("upstart")]),t._v(" 的系统而言，编辑 "),e("code",[t._v("/etc/default/docker")]),t._v(" 文件，在其中的 "),e("code",[t._v("DOCKER_OPTS")]),t._v(" 中增加如下内容：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("DOCKER_OPTS"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--registry-mirror=https://registry.docker-cn.com --insecure-registries=192.168.56.100:5000"')]),t._v("\n")])])]),e("p",[t._v("重新启动服务。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" docker restart\n")])])]),e("h4",{attrs:{id:"ubuntu-16-04-debian-8-centos-7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-16-04-debian-8-centos-7","aria-hidden":"true"}},[t._v("#")]),t._v(" Ubuntu 16.04+, Debian 8+, centos 7")]),t._v(" "),e("p",[t._v("对于使用 "),e("code",[t._v("systemd")]),t._v(" 的系统，请在 "),e("code",[t._v("/etc/docker/daemon.json")]),t._v(" 中写入如下内容（如果文件不存在请新建该文件）")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"registry-mirrors"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://registry.docker-cn.com"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"insecure-registries"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.56.100:5000"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("注意：该文件必须符合 "),e("code",[t._v("json")]),t._v(" 规范，否则 Docker 将不能启动。")])]),t._v(" "),e("h4",{attrs:{id:"其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他","aria-hidden":"true"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),e("p",[t._v("对于 Docker for Windows 、 Docker for Mac 在设置中编辑 "),e("code",[t._v("daemon.json")]),t._v(" 增加和上边一样的字符串即可。")]),t._v(" "),e("h2",{attrs:{id:"私有仓库高级配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#私有仓库高级配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 私有仓库高级配置")]),t._v(" "),e("p",[t._v("上一节我们搭建了一个具有基础功能的私有仓库，本小节我们来使用 "),e("code",[t._v("Docker Compose")]),t._v(" 搭建一个拥有权限认证、TLS 的私有仓库。")]),t._v(" "),e("p",[t._v("新建一个文件夹，以下步骤均在该文件夹中进行。")]),t._v(" "),e("h3",{attrs:{id:"准备站点证书"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#准备站点证书","aria-hidden":"true"}},[t._v("#")]),t._v(" 准备站点证书")]),t._v(" "),e("p",[t._v("如果你拥有一个域名，国内各大云服务商均提供免费的站点证书。你也可以使用 "),e("code",[t._v("openssl")]),t._v(" 自行签发证书。")]),t._v(" "),e("p",[t._v("这里假设我们将要搭建的私有仓库地址为 "),e("code",[t._v("docker.domain.com")]),t._v("，下面我们介绍使用 "),e("code",[t._v("openssl")]),t._v(" 自行签发 "),e("code",[t._v("docker.domain.com")]),t._v(" 的站点 SSL 证书。")]),t._v(" "),e("p",[t._v("第一步创建 "),e("code",[t._v("CA")]),t._v(" 私钥。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ openssl genrsa -out "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root-ca.key"')]),t._v(" 4096\n")])])]),e("p",[t._v("第二步利用私钥创建 "),e("code",[t._v("CA")]),t._v(" 根证书请求文件。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ openssl req \\\n          -new -key "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root-ca.key"')]),t._v(" \\\n          -out "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root-ca.csr"')]),t._v(" -sha256 \\\n          -subj "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/C=CN/ST=Shanxi/L=Datong/O=Your Company Name/CN=Your Company Name Docker Registry CA'")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("以上命令中 "),e("code",[t._v("-subj")]),t._v(" 参数里的 "),e("code",[t._v("/C")]),t._v(" 表示国家，如 "),e("code",[t._v("CN")]),t._v("；"),e("code",[t._v("/ST")]),t._v(" 表示省；"),e("code",[t._v("/L")]),t._v(" 表示城市或者地区；"),e("code",[t._v("/O")]),t._v(" 表示组织名；"),e("code",[t._v("/CN")]),t._v(" 通用名称。")])]),t._v(" "),e("p",[t._v("第三步配置 "),e("code",[t._v("CA")]),t._v(" 根证书，新建 "),e("code",[t._v("root-ca.cnf")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root_ca"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nbasicConstraints "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" critical,CA:TRUE,pathlen:1\nkeyUsage "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" critical, nonRepudiation, cRLSign, keyCertSign\nsubjectKeyIdentifier"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("hash\n")])])]),e("p",[t._v("第四步签发根证书。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ openssl x509 -req  -days 3650  -in "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root-ca.csr"')]),t._v(" \\\n               -signkey "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root-ca.key"')]),t._v(" -sha256 -out "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root-ca.crt"')]),t._v(" \\\n               -extfile "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root-ca.cnf"')]),t._v(" -extensions \\\n               root_ca\n")])])]),e("p",[t._v("第五步生成站点 "),e("code",[t._v("SSL")]),t._v(" 私钥。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ openssl genrsa -out "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker.domain.com.key"')]),t._v(" 4096\n")])])]),e("p",[t._v("第六步使用私钥生成证书请求文件。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ openssl req -new -key "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker.domain.com.key"')]),t._v(" -out "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"site.csr"')]),t._v(" -sha256 \\\n          -subj "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/C=CN/ST=Shanxi/L=Datong/O=Your Company Name/CN=docker.domain.com'")]),t._v("\n")])])]),e("p",[t._v("第七步配置证书，新建 "),e("code",[t._v("site.cnf")]),t._v(" 文件。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nauthorityKeyIdentifier"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("keyid,issuer\nbasicConstraints "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" critical,CA:FALSE\nextendedKeyUsage"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("serverAuth\nkeyUsage "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" critical, digitalSignature, keyEncipherment\nsubjectAltName "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DNS:docker.domain.com, IP:127.0.0.1\nsubjectKeyIdentifier"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("hash\n")])])]),e("p",[t._v("第八步签署站点 "),e("code",[t._v("SSL")]),t._v(" 证书。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ openssl x509 -req -days 750 -in "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"site.csr"')]),t._v(" -sha256 \\\n    -CA "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root-ca.crt"')]),t._v(" -CAkey "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root-ca.key"')]),t._v("  -CAcreateserial \\\n    -out "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker.domain.com.crt"')]),t._v(" -extfile "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"site.cnf"')]),t._v(" -extensions server\n")])])]),e("p",[t._v("这样已经拥有了 "),e("code",[t._v("docker.domain.com")]),t._v(" 的网站 SSL 私钥 "),e("code",[t._v("docker.domain.com.key")]),t._v(" 和 SSL 证书 "),e("code",[t._v("docker.domain.com.crt")]),t._v("。")]),t._v(" "),e("p",[t._v("新建 "),e("code",[t._v("ssl")]),t._v(" 文件夹并将 "),e("code",[t._v("docker.domain.com.key")]),t._v(" "),e("code",[t._v("docker.domain.com.crt")]),t._v(" 这两个文件移入，删除其他文件。")]),t._v(" "),e("h3",{attrs:{id:"配置私有仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置私有仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置私有仓库")]),t._v(" "),e("p",[t._v("私有仓库默认的配置文件位于 "),e("code",[t._v("/etc/docker/registry/config.yml")]),t._v("，我们先在本地编辑 "),e("code",[t._v("config.yml")]),t._v("，之后挂载到容器中。")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accesslog")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("disabled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("level")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" debug\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("formatter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" text\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fields")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" registry\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" staging\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("delete")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cache")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("blobdescriptor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inmemory\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filesystem")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rootdirectory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/lib/registry\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("auth")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("htpasswd")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("realm")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" basic"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("realm\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /etc/docker/registry/auth/nginx.htpasswd\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("http")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("addr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//docker.domain.com\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("headers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("X-Content-Type-Options")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("nosniff"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("http2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("disabled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tls")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("certificate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /etc/docker/registry/ssl/docker.domain.com.crt\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /etc/docker/registry/ssl/docker.domain.com.key\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("health")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storagedriver")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("interval")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10s\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("threshold")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),e("h3",{attrs:{id:"生成-http-认证文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成-http-认证文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 生成 http 认证文件")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" auth\n\n$ docker run --rm \\\n    --entrypoint htpasswd \\\n    registry \\\n    -Bbn username password "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" auth/nginx.htpasswd\n")])])]),e("blockquote",[e("p",[t._v("将上面的 "),e("code",[t._v("username")]),t._v(" "),e("code",[t._v("password")]),t._v(" 替换为你自己的用户名和密码。")])]),t._v(" "),e("h3",{attrs:{id:"编辑-docker-compose-yml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编辑-docker-compose-yml","aria-hidden":"true"}},[t._v("#")]),t._v(" 编辑 "),e("code",[t._v("docker-compose.yml")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("registry")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" registry\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"443:443"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/docker/registry\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" registry"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/lib/registry\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("registry-data")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])]),e("h3",{attrs:{id:"修改-hosts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改-hosts","aria-hidden":"true"}},[t._v("#")]),t._v(" 修改 hosts")]),t._v(" "),e("p",[t._v("编辑 "),e("code",[t._v("/etc/hosts")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("docker.domain.com 127.0.0.1\n")])])]),e("h3",{attrs:{id:"启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动","aria-hidden":"true"}},[t._v("#")]),t._v(" 启动")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ docker-compose up -d\n")])])]),e("p",[t._v("这样我们就搭建好了一个具有权限认证、TLS 的私有仓库，接下来我们测试其功能是否正常。")]),t._v(" "),e("h2",{attrs:{id:"测试私有仓库功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试私有仓库功能","aria-hidden":"true"}},[t._v("#")]),t._v(" 测试私有仓库功能")]),t._v(" "),e("p",[t._v("登录到私有仓库。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ docker login docker.domain.com\n")])])]),e("p",[t._v("尝试推送、拉取镜像。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ docker pull ubuntu:17.10\n\n$ docker tag ubuntu:17.10 docker.domain.com/username/ubuntu:17.10\n\n$ docker push docker.domain.com/username/ubuntu:17.10\n\n$ docker image "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" docker.domain.com/username/ubuntu:17.10\n\n$ docker pull docker.domain.com/username/ubuntu:17.10\n")])])]),e("p",[t._v("如果我们退出登录，尝试推送镜像。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ docker "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("logout")]),t._v(" docker.domain.com\n\n$ docker push docker.domain.com/username/ubuntu:17.10\n\nno basic auth credentials\n")])])]),e("p",[t._v("发现会提示没有登录，不能将镜像推送到私有仓库中。")]),t._v(" "),e("h2",{attrs:{id:"注意事项-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注意事项-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),e("p",[t._v("如果你本机占用了 "),e("code",[t._v("443")]),t._v(" 端口，你可以配置 "),e("a",{attrs:{href:"https://docs.docker.com/registry/recipes/nginx/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx 代理"),e("OutboundLink")],1),t._v("，这里不再赘述。")])])},[],!1,null,null,null);a.default=r.exports}}]);