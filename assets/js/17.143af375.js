(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{200:function(a,s,t){"use strict";t.r(s);var e=t(0),r=Object(e.a)({},function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"docker-compose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose","aria-hidden":"true"}},[a._v("#")]),a._v(" Docker Compose")]),a._v(" "),t("h2",{attrs:{id:"介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍","aria-hidden":"true"}},[a._v("#")]),a._v(" 介绍")]),a._v(" "),t("p",[t("code",[a._v("Compose")]),a._v(" 项目是 Docker 官方的开源项目，负责实现对 Docker 容器集群的快速编排。从功能上看，跟 "),t("code",[a._v("OpenStack")]),a._v(" 中的 "),t("code",[a._v("Heat")]),a._v(" 十分类似。")]),a._v(" "),t("p",[a._v("其代码目前在 https://github.com/docker/compose 上开源。")]),a._v(" "),t("p",[t("code",[a._v("Compose")]),a._v(" 定位是 「定义和运行多个 Docker 容器的应用（Defining and running multi-container Docker applications）」，其前身是开源项目 Fig。")]),a._v(" "),t("p",[a._v("通过第一部分中的介绍，我们知道使用一个 "),t("code",[a._v("Dockerfile")]),a._v(" 模板文件，可以让用户很方便的定义一个单独的应用容器。然而，在日常工作中，经常会碰到需要多个容器相互配合来完成某项任务的情况。例如要实现一个 Web 项目，除了 Web 服务容器本身，往往还需要再加上后端的数据库服务容器，甚至还包括负载均衡容器等。")]),a._v(" "),t("p",[t("code",[a._v("Compose")]),a._v(" 恰好满足了这样的需求。它允许用户通过一个单独的 "),t("code",[a._v("docker-compose.yml")]),a._v(" 模板文件（YAML 格式）来定义一组相关联的应用容器为一个项目（project）。")]),a._v(" "),t("p",[t("code",[a._v("Compose")]),a._v(" 中有两个重要的概念：")]),a._v(" "),t("ul",[t("li",[a._v("服务 ("),t("code",[a._v("service")]),a._v(")：一个应用的容器，实际上可以包括若干运行相同镜像的容器实例。")]),a._v(" "),t("li",[a._v("项目 ("),t("code",[a._v("project")]),a._v(")：由一组关联的应用容器组成的一个完整业务单元，在 "),t("code",[a._v("docker-compose.yml")]),a._v(" 文件中定义。")])]),a._v(" "),t("p",[t("code",[a._v("Compose")]),a._v(" 的默认管理对象是项目，通过子命令对项目中的一组容器进行便捷地生命周期管理。")]),a._v(" "),t("p",[t("code",[a._v("Compose")]),a._v(" 项目由 Python 编写，实现上调用了 Docker 服务提供的 API 来对容器进行管理。因此，只要所操作的平台支持 Docker API，就可以在其上利用 "),t("code",[a._v("Compose")]),a._v(" 来进行编排管理。")]),a._v(" "),t("h2",{attrs:{id:"安装与卸载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装与卸载","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装与卸载")]),a._v(" "),t("p",[t("code",[a._v("Compose")]),a._v(" 支持 Linux、macOS、Windows 10 三大平台。")]),a._v(" "),t("p",[t("code",[a._v("Compose")]),a._v(" 可以通过 Python 的包管理工具 "),t("code",[a._v("pip")]),a._v(" 进行安装，也可以直接下载编译好的二进制文件使用，甚至能够直接在 Docker 容器中运行。")]),a._v(" "),t("p",[a._v("前两种方式是传统方式，适合本地环境下安装使用；最后一种方式则不破坏系统环境，更适合云计算场景。")]),a._v(" "),t("p",[t("code",[a._v("Docker for Mac")]),a._v(" 、"),t("code",[a._v("Docker for Windows")]),a._v(" 自带 "),t("code",[a._v("docker-compose")]),a._v(" 二进制文件，安装 Docker 之后可以直接使用。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker-compose --version\n\ndocker-compose version 1.17.1, build 6d101fb\n")])])]),t("p",[a._v("Linux 系统请使用以下介绍的方法安装。")]),a._v(" "),t("h3",{attrs:{id:"二进制包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二进制包","aria-hidden":"true"}},[a._v("#")]),a._v(" 二进制包")]),a._v(" "),t("p",[a._v("在 Linux 上的也安装十分简单，从 "),t("a",{attrs:{href:"https://github.com/docker/compose/releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("官方 GitHub Release"),t("OutboundLink")],1),a._v(" 处直接下载编译好的二进制文件即可。")]),a._v(" "),t("p",[a._v("例如，在 Linux 64 位系统上直接下载对应的二进制包。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("uname")]),a._v(" -s"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v("-"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("uname")]),a._v(" -m"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" /usr/local/bin/docker-compose\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x /usr/local/bin/docker-compose\n")])])]),t("h3",{attrs:{id:"pip-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pip-安装","aria-hidden":"true"}},[a._v("#")]),a._v(" PIP 安装")]),a._v(" "),t("p",[t("em",[a._v("注：")]),a._v(" "),t("code",[a._v("x86_64")]),a._v(" 架构的 Linux 建议按照上边的方法下载二进制包进行安装，如果您计算机的架构是 "),t("code",[a._v("ARM")]),a._v("(例如，树莓派)，再使用 "),t("code",[a._v("pip")]),a._v(" 安装。")]),a._v(" "),t("p",[a._v("这种方式是将 Compose 当作一个 Python 应用来从 pip 源中安装。")]),a._v(" "),t("p",[a._v("执行安装命令：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" pip "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -U docker-compose\n")])])]),t("p",[a._v("可以看到类似如下输出，说明安装成功。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("Collecting docker-compose\n  Downloading docker-compose-1.17.1.tar.gz "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("149kB"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(": 149kB downloaded\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\nSuccessfully installed docker-compose cached-property requests texttable websocket-client docker-py dockerpty six enum34 backports.ssl-match-hostname ipaddress\n")])])]),t("h3",{attrs:{id:"bash-补全命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bash-补全命令","aria-hidden":"true"}},[a._v("#")]),a._v(" bash 补全命令")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -L https://raw.githubusercontent.com/docker/compose/1.8.0/contrib/completion/bash/docker-compose "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" /etc/bash_completion.d/docker-compose\n")])])]),t("h3",{attrs:{id:"容器中执行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器中执行","aria-hidden":"true"}},[a._v("#")]),a._v(" 容器中执行")]),a._v(" "),t("p",[a._v("Compose 既然是一个 Python 应用，自然也可以直接用容器来执行它。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -L https://github.com/docker/compose/releases/download/1.8.0/run.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" /usr/local/bin/docker-compose\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x /usr/local/bin/docker-compose\n")])])]),t("p",[a._v("实际上，查看下载的 "),t("code",[a._v("run.sh")]),a._v(" 脚本内容，如下")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("set")]),a._v(" -e\n\nVERSION"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1.8.0"')]),a._v("\nIMAGE"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"docker/compose:'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$VERSION")]),a._v('"')]),a._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Setup options for connecting to docker host")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" -z "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$DOCKER_HOST")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n    DOCKER_HOST"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/var/run/docker.sock"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" -S "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$DOCKER_HOST")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n    DOCKER_ADDR"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-v '),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$DOCKER_HOST")]),a._v(":"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$DOCKER_HOST")]),a._v(' -e DOCKER_HOST"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v("\n    DOCKER_ADDR"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-e DOCKER_HOST -e DOCKER_TLS_VERIFY -e DOCKER_CERT_PATH"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Setup volume mounts for compose config and context")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("pwd")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n    VOLUMES"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-v '),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("pwd")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(":"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("pwd")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" -n "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$COMPOSE_FILE")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n    compose_dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("dirname")]),a._v(" $COMPOSE_FILE"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# TODO: also check --file argument")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" -n "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$compose_dir")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n    VOLUMES"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$VOLUMES")]),a._v(" -v "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$compose_dir")]),a._v(":"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$compose_dir")]),a._v('"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" -n "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n    VOLUMES"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$VOLUMES")]),a._v(" -v "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME")]),a._v(":"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME")]),a._v(" -v "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$HOME")]),a._v(':/root"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# mount $HOME in /root to share docker.config")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Only allocate tty if we detect one")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" -t 1 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n    DOCKER_RUN_OPTIONS"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-t"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" -t 0 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n    DOCKER_RUN_OPTIONS"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$DOCKER_RUN_OPTIONS")]),a._v(' -i"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("exec")]),a._v(" docker run --rm "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$DOCKER_RUN_OPTIONS")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$DOCKER_ADDR")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$COMPOSE_OPTIONS")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$VOLUMES")]),a._v(" -w "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("pwd")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$IMAGE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@")]),a._v('"')]),a._v("\n")])])]),t("p",[a._v("可以看到，它其实是下载了 "),t("code",[a._v("docker/compose")]),a._v(" 镜像并运行。")]),a._v(" "),t("h3",{attrs:{id:"卸载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#卸载","aria-hidden":"true"}},[a._v("#")]),a._v(" 卸载")]),a._v(" "),t("p",[a._v("如果是二进制包方式安装的，删除二进制文件即可。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" /usr/local/bin/docker-compose\n")])])]),t("p",[a._v("如果是通过 "),t("code",[a._v("pip")]),a._v(" 安装的，则执行如下命令即可删除。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" pip uninstall docker-compose\n")])])]),t("h2",{attrs:{id:"使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用","aria-hidden":"true"}},[a._v("#")]),a._v(" 使用")]),a._v(" "),t("h3",{attrs:{id:"术语"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#术语","aria-hidden":"true"}},[a._v("#")]),a._v(" 术语")]),a._v(" "),t("p",[a._v("首先介绍几个术语。")]),a._v(" "),t("ul",[t("li",[a._v("服务 ("),t("code",[a._v("service")]),a._v(")：一个应用容器，实际上可以运行多个相同镜像的实例。")]),a._v(" "),t("li",[a._v("项目 ("),t("code",[a._v("project")]),a._v(")：由一组关联的应用容器组成的一个完整业务单元。")])]),a._v(" "),t("p",[a._v("可见，一个项目可以由多个服务（容器）关联而成，"),t("code",[a._v("Compose")]),a._v(" 面向项目进行管理。")]),a._v(" "),t("h3",{attrs:{id:"场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景","aria-hidden":"true"}},[a._v("#")]),a._v(" 场景")]),a._v(" "),t("p",[a._v("最常见的项目是 web 网站，该项目应该包含 web 应用和缓存。")]),a._v(" "),t("p",[a._v("下面我们用 "),t("code",[a._v("Python")]),a._v(" 来建立一个能够记录页面访问次数的 web 网站。")]),a._v(" "),t("h4",{attrs:{id:"web-应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#web-应用","aria-hidden":"true"}},[a._v("#")]),a._v(" web 应用")]),a._v(" "),t("p",[a._v("新建文件夹，在该目录中编写 "),t("code",[a._v("app.py")]),a._v(" 文件")]),a._v(" "),t("div",{staticClass:"language-python extra-class"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" flask "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" Flask\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" redis "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" Redis\n\napp "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Flask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("__name__"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nredis "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("host"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'redis'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" port"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6379")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n@app"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("route"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("hello")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    count "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("incr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hits'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Hello World! 该页面已被访问 {} 次。\\n'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("format")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" __name__ "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"__main__"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    app"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("run"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("host"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.0.0.0"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" debug"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("True")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("编写 "),t("code",[a._v("Dockerfile")]),a._v(" 文件，内容为")]),a._v(" "),t("div",{staticClass:"language-docker extra-class"},[t("pre",{pre:!0,attrs:{class:"language-docker"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" python"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("3.6"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("alpine\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ADD")]),a._v(" . /code\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WORKDIR")]),a._v(" /code\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" pip install redis flask\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CMD")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"python"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"app.py"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[a._v("编写 "),t("code",[a._v("docker-compose.yml")]),a._v(" 文件，这个是 Compose 使用的主模板文件。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'3'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("web")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" .\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"5000:5000"')]),a._v("\n     \n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("redis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"redis:alpine"')]),a._v("\n")])])]),t("p",[a._v("运行 compose 项目")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker-compose up\n")])])]),t("p",[a._v("此时访问本地 "),t("code",[a._v("5000")]),a._v(" 端口，每次刷新页面，计数就会加 1。")]),a._v(" "),t("h2",{attrs:{id:"命令说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令说明","aria-hidden":"true"}},[a._v("#")]),a._v(" 命令说明")]),a._v(" "),t("p",[t("code",[a._v("docker-compose")]),a._v(" 命令的基本的使用格式是")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker-compose "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-f"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("arg"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("COMMAND"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("ARGS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("ul",[t("li",[t("code",[a._v("-f, --file FILE")]),a._v(" 指定使用的 Compose 模板文件，默认为 "),t("code",[a._v("docker-compose.yml")]),a._v("，可以多次指定。")]),a._v(" "),t("li",[t("code",[a._v("-p, --project-name NAME")]),a._v(" 指定项目名称，默认将使用所在目录名称作为项目名。")]),a._v(" "),t("li",[t("code",[a._v("--x-networking")]),a._v(" 使用 Docker 的可拔插网络后端特性")]),a._v(" "),t("li",[t("code",[a._v("--x-network-driver DRIVER")]),a._v(" 指定网络后端的驱动，默认为 "),t("code",[a._v("bridge")])]),a._v(" "),t("li",[t("code",[a._v("--verbose")]),a._v(" 输出更多调试信息。")]),a._v(" "),t("li",[t("code",[a._v("-v, --version")]),a._v(" 打印版本并退出。")])]),a._v(" "),t("h3",{attrs:{id:"build"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#build","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("build")])]),a._v(" "),t("p",[a._v("格式为 "),t("code",[a._v("docker-compose build [options] [SERVICE...]")]),a._v("。")]),a._v(" "),t("p",[a._v("构建（重新构建）项目中的服务容器。")]),a._v(" "),t("p",[a._v("服务容器一旦构建后，将会带上一个标记名，例如对于 web 项目中的一个 db 容器，可能是 web_db。")]),a._v(" "),t("p",[a._v("可以随时在项目目录下运行 "),t("code",[a._v("docker-compose build")]),a._v(" 来重新构建服务。")]),a._v(" "),t("p",[a._v("选项包括：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("--force-rm")]),a._v(" 删除构建过程中的临时容器。")]),a._v(" "),t("li",[t("code",[a._v("--no-cache")]),a._v(" 构建镜像过程中不使用 cache（这将加长构建过程）。")]),a._v(" "),t("li",[t("code",[a._v("--pull")]),a._v(" 始终尝试通过 pull 来获取更新版本的镜像。")])]),a._v(" "),t("h3",{attrs:{id:"config"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#config","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("config")])]),a._v(" "),t("p",[a._v("验证 Compose 文件格式是否正确，若正确则显示配置，若格式错误显示错误原因。")]),a._v(" "),t("h3",{attrs:{id:"down"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#down","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("down")])]),a._v(" "),t("p",[a._v("此命令将会停止 "),t("code",[a._v("up")]),a._v(" 命令所启动的容器，并移除网络")]),a._v(" "),t("h3",{attrs:{id:"exec"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exec","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("exec")])]),a._v(" "),t("p",[a._v("进入指定的容器。")]),a._v(" "),t("h3",{attrs:{id:"help"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#help","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("help")])]),a._v(" "),t("p",[a._v("获得一个命令的帮助。")]),a._v(" "),t("h3",{attrs:{id:"images"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#images","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("images")])]),a._v(" "),t("p",[a._v("列出 Compose 文件中包含的镜像。")]),a._v(" "),t("h3",{attrs:{id:"kill"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kill","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("kill")])]),a._v(" "),t("p",[a._v("格式为 "),t("code",[a._v("docker-compose kill [options] [SERVICE...]")]),a._v("。")]),a._v(" "),t("p",[a._v("通过发送 "),t("code",[a._v("SIGKILL")]),a._v(" 信号来强制停止服务容器。")]),a._v(" "),t("p",[a._v("支持通过 "),t("code",[a._v("-s")]),a._v(" 参数来指定发送的信号，例如通过如下指令发送 "),t("code",[a._v("SIGINT")]),a._v(" 信号。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker-compose "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("kill")]),a._v(" -s SIGINT\n")])])]),t("h3",{attrs:{id:"logs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#logs","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("logs")])]),a._v(" "),t("p",[a._v("格式为 "),t("code",[a._v("docker-compose logs [options] [SERVICE...]")]),a._v("。")]),a._v(" "),t("p",[a._v("查看服务容器的输出。默认情况下，docker-compose 将对不同的服务输出使用不同的颜色来区分。可以通过 "),t("code",[a._v("--no-color")]),a._v(" 来关闭颜色。")]),a._v(" "),t("p",[a._v("该命令在调试问题的时候十分有用。")]),a._v(" "),t("h3",{attrs:{id:"pause"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pause","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("pause")])]),a._v(" "),t("p",[a._v("格式为 "),t("code",[a._v("docker-compose pause [SERVICE...]")]),a._v("。")]),a._v(" "),t("p",[a._v("暂停一个服务容器。")]),a._v(" "),t("h3",{attrs:{id:"port"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#port","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("port")])]),a._v(" "),t("p",[a._v("格式为 "),t("code",[a._v("docker-compose port [options] SERVICE PRIVATE_PORT")]),a._v("。")]),a._v(" "),t("p",[a._v("打印某个容器端口所映射的公共端口。")]),a._v(" "),t("p",[a._v("选项：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("--protocol=proto")]),a._v(" 指定端口协议，tcp（默认值）或者 udp。")]),a._v(" "),t("li",[t("code",[a._v("--index=index")]),a._v(" 如果同一服务存在多个容器，指定命令对象容器的序号（默认为 1）。")])]),a._v(" "),t("h3",{attrs:{id:"ps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ps","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("ps")])]),a._v(" "),t("p",[a._v("格式为 "),t("code",[a._v("docker-compose ps [options] [SERVICE...]")]),a._v("。")]),a._v(" "),t("p",[a._v("列出项目中目前的所有容器。")]),a._v(" "),t("p",[a._v("选项：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("-q")]),a._v(" 只打印容器的 ID 信息。")])]),a._v(" "),t("h3",{attrs:{id:"pull"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pull","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("pull")])]),a._v(" "),t("p",[a._v("格式为 "),t("code",[a._v("docker-compose pull [options] [SERVICE...]")]),a._v("。")]),a._v(" "),t("p",[a._v("拉取服务依赖的镜像。")]),a._v(" "),t("p",[a._v("选项：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("--ignore-pull-failures")]),a._v(" 忽略拉取镜像过程中的错误。")])]),a._v(" "),t("h3",{attrs:{id:"push"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#push","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("push")])]),a._v(" "),t("p",[a._v("推送服务依赖的镜像到 Docker 镜像仓库。")]),a._v(" "),t("h3",{attrs:{id:"restart"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#restart","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("restart")])]),a._v(" "),t("p",[a._v("格式为 "),t("code",[a._v("docker-compose restart [options] [SERVICE...]")]),a._v("。")]),a._v(" "),t("p",[a._v("重启项目中的服务。")]),a._v(" "),t("p",[a._v("选项：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("-t, --timeout TIMEOUT")]),a._v(" 指定重启前停止容器的超时（默认为 10 秒）。")])]),a._v(" "),t("h3",{attrs:{id:"rm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rm","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("rm")])]),a._v(" "),t("p",[a._v("格式为 "),t("code",[a._v("docker-compose rm [options] [SERVICE...]")]),a._v("。")]),a._v(" "),t("p",[a._v("删除所有（停止状态的）服务容器。推荐先执行 "),t("code",[a._v("docker-compose stop")]),a._v(" 命令来停止容器。")]),a._v(" "),t("p",[a._v("选项：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("-f, --force")]),a._v(" 强制直接删除，包括非停止状态的容器。一般尽量不要使用该选项。")]),a._v(" "),t("li",[t("code",[a._v("-v")]),a._v(" 删除容器所挂载的数据卷。")])]),a._v(" "),t("h3",{attrs:{id:"run"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#run","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("run")])]),a._v(" "),t("p",[a._v("格式为 "),t("code",[a._v("docker-compose run [options] [-p PORT...] [-e KEY=VAL...] SERVICE [COMMAND] [ARGS...]")]),a._v("。")]),a._v(" "),t("p",[a._v("在指定服务上执行一个命令。")]),a._v(" "),t("p",[a._v("例如：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker-compose run ubuntu "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ping")]),a._v(" docker.com\n")])])]),t("p",[a._v("将会启动一个 ubuntu 服务容器，并执行 "),t("code",[a._v("ping docker.com")]),a._v(" 命令。")]),a._v(" "),t("p",[a._v("默认情况下，如果存在关联，则所有关联的服务将会自动被启动，除非这些服务已经在运行中。")]),a._v(" "),t("p",[a._v("该命令类似启动容器后运行指定的命令，相关卷、链接等等都将会按照配置自动创建。")]),a._v(" "),t("p",[a._v("两个不同点：")]),a._v(" "),t("ul",[t("li",[a._v("给定命令将会覆盖原有的自动运行命令；")]),a._v(" "),t("li",[a._v("不会自动创建端口，以避免冲突。")])]),a._v(" "),t("p",[a._v("如果不希望自动启动关联的容器，可以使用 "),t("code",[a._v("--no-deps")]),a._v(" 选项，例如")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker-compose run --no-deps web python manage.py shell\n")])])]),t("p",[a._v("将不会启动 web 容器所关联的其它容器。")]),a._v(" "),t("p",[a._v("选项：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("-d")]),a._v(" 后台运行容器。")]),a._v(" "),t("li",[t("code",[a._v("--name NAME")]),a._v(" 为容器指定一个名字。")]),a._v(" "),t("li",[t("code",[a._v("--entrypoint CMD")]),a._v(" 覆盖默认的容器启动指令。")]),a._v(" "),t("li",[t("code",[a._v("-e KEY=VAL")]),a._v(" 设置环境变量值，可多次使用选项来设置多个环境变量。")]),a._v(" "),t("li",[t("code",[a._v('-u, --user=""')]),a._v(" 指定运行容器的用户名或者 uid。")]),a._v(" "),t("li",[t("code",[a._v("--no-deps")]),a._v(" 不自动启动关联的服务容器。")]),a._v(" "),t("li",[t("code",[a._v("--rm")]),a._v(" 运行命令后自动删除容器，"),t("code",[a._v("d")]),a._v(" 模式下将忽略。")]),a._v(" "),t("li",[t("code",[a._v("-p, --publish=[]")]),a._v(" 映射容器端口到本地主机。")]),a._v(" "),t("li",[t("code",[a._v("--service-ports")]),a._v(" 配置服务端口并映射到本地主机。")]),a._v(" "),t("li",[t("code",[a._v("-T")]),a._v(" 不分配伪 tty，意味着依赖 tty 的指令将无法运行。")])]),a._v(" "),t("h3",{attrs:{id:"scale"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scale","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("scale")])]),a._v(" "),t("p",[a._v("格式为 "),t("code",[a._v("docker-compose scale [options] [SERVICE=NUM...]")]),a._v("。")]),a._v(" "),t("p",[a._v("设置指定服务运行的容器个数。")]),a._v(" "),t("p",[a._v("通过 "),t("code",[a._v("service=num")]),a._v(" 的参数来设置数量。例如：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker-compose scale web"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("3 db"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("2\n")])])]),t("p",[a._v("将启动 3 个容器运行 web 服务，2 个容器运行 db 服务。")]),a._v(" "),t("p",[a._v("一般的，当指定数目多于该服务当前实际运行容器，将新创建并启动容器；反之，将停止容器。")]),a._v(" "),t("p",[a._v("选项：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("-t, --timeout TIMEOUT")]),a._v(" 停止容器时候的超时（默认为 10 秒）。")])]),a._v(" "),t("h3",{attrs:{id:"start"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#start","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("start")])]),a._v(" "),t("p",[a._v("格式为 "),t("code",[a._v("docker-compose start [SERVICE...]")]),a._v("。")]),a._v(" "),t("p",[a._v("启动已经存在的服务容器。")]),a._v(" "),t("h3",{attrs:{id:"stop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stop","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("stop")])]),a._v(" "),t("p",[a._v("格式为 "),t("code",[a._v("docker-compose stop [options] [SERVICE...]")]),a._v("。")]),a._v(" "),t("p",[a._v("停止已经处于运行状态的容器，但不删除它。通过 "),t("code",[a._v("docker-compose start")]),a._v(" 可以再次启动这些容器。")]),a._v(" "),t("p",[a._v("选项：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("-t, --timeout TIMEOUT")]),a._v(" 停止容器时候的超时（默认为 10 秒）。")])]),a._v(" "),t("h3",{attrs:{id:"top"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#top","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("top")])]),a._v(" "),t("p",[a._v("查看各个服务容器内运行的进程。")]),a._v(" "),t("h3",{attrs:{id:"unpause"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unpause","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("unpause")])]),a._v(" "),t("p",[a._v("格式为 "),t("code",[a._v("docker-compose unpause [SERVICE...]")]),a._v("。")]),a._v(" "),t("p",[a._v("恢复处于暂停状态中的服务。")]),a._v(" "),t("h3",{attrs:{id:"up"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#up","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("up")])]),a._v(" "),t("p",[a._v("格式为 "),t("code",[a._v("docker-compose up [options] [SERVICE...]")]),a._v("。")]),a._v(" "),t("p",[a._v("该命令十分强大，它将尝试自动完成包括构建镜像，（重新）创建服务，启动服务，并关联服务相关容器的一系列操作。")]),a._v(" "),t("p",[a._v("链接的服务都将会被自动启动，除非已经处于运行状态。")]),a._v(" "),t("p",[a._v("可以说，大部分时候都可以直接通过该命令来启动一个项目。")]),a._v(" "),t("p",[a._v("默认情况，"),t("code",[a._v("docker-compose up")]),a._v(" 启动的容器都在前台，控制台将会同时打印所有容器的输出信息，可以很方便进行调试。")]),a._v(" "),t("p",[a._v("当通过 "),t("code",[a._v("Ctrl-C")]),a._v(" 停止命令时，所有容器将会停止。")]),a._v(" "),t("p",[a._v("如果使用 "),t("code",[a._v("docker-compose up -d")]),a._v("，将会在后台启动并运行所有的容器。一般推荐生产环境下使用该选项。")]),a._v(" "),t("p",[a._v("默认情况，如果服务容器已经存在，"),t("code",[a._v("docker-compose up")]),a._v(" 将会尝试停止容器，然后重新创建（保持使用 "),t("code",[a._v("volumes-from")]),a._v(" 挂载的卷），以保证新启动的服务匹配 "),t("code",[a._v("docker-compose.yml")]),a._v(" 文件的最新内容。如果用户不希望容器被停止并重新创建，可以使用 "),t("code",[a._v("docker-compose up --no-recreate")]),a._v("。这样将只会启动处于停止状态的容器，而忽略已经运行的服务。如果用户只想重新部署某个服务，可以使用 "),t("code",[a._v("docker-compose up --no-deps -d <SERVICE_NAME>")]),a._v(" 来重新创建服务并后台停止旧服务，启动新服务，并不会影响到其所依赖的服务。")]),a._v(" "),t("p",[a._v("选项：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("-d")]),a._v(" 在后台运行服务容器。")]),a._v(" "),t("li",[t("code",[a._v("--no-color")]),a._v(" 不使用颜色来区分不同的服务的控制台输出。")]),a._v(" "),t("li",[t("code",[a._v("--no-deps")]),a._v(" 不启动服务所链接的容器。")]),a._v(" "),t("li",[t("code",[a._v("--force-recreate")]),a._v(" 强制重新创建容器，不能与 "),t("code",[a._v("--no-recreate")]),a._v(" 同时使用。")]),a._v(" "),t("li",[t("code",[a._v("--no-recreate")]),a._v(" 如果容器已经存在了，则不重新创建，不能与 "),t("code",[a._v("--force-recreate")]),a._v(" 同时使用。")]),a._v(" "),t("li",[t("code",[a._v("--no-build")]),a._v(" 不自动构建缺失的服务镜像。")]),a._v(" "),t("li",[t("code",[a._v("-t, --timeout TIMEOUT")]),a._v(" 停止容器时候的超时（默认为 10 秒）。")])]),a._v(" "),t("h3",{attrs:{id:"version"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("version")])]),a._v(" "),t("p",[a._v("格式为 "),t("code",[a._v("docker-compose version")]),a._v("。")]),a._v(" "),t("p",[a._v("打印版本信息。")]),a._v(" "),t("h2",{attrs:{id:"模板文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模板文件","aria-hidden":"true"}},[a._v("#")]),a._v(" 模板文件")]),a._v(" "),t("p",[a._v("默认的模板文件名称为 "),t("code",[a._v("docker-compose.yml")]),a._v("，格式为 YAML 格式。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"3"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("webapp")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" examples/web\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"80:80"')]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/data"')]),a._v("\n")])])]),t("p",[a._v("注意每个服务都必须通过 "),t("code",[a._v("image")]),a._v(" 指令指定镜像或 "),t("code",[a._v("build")]),a._v(" 指令（需要 Dockerfile）等来自动构建生成镜像。")]),a._v(" "),t("p",[a._v("如果使用 "),t("code",[a._v("build")]),a._v(" 指令，在 "),t("code",[a._v("Dockerfile")]),a._v(" 中设置的选项(例如："),t("code",[a._v("CMD")]),a._v(", "),t("code",[a._v("EXPOSE")]),a._v(", "),t("code",[a._v("VOLUME")]),a._v(", "),t("code",[a._v("ENV")]),a._v(" 等) 将会自动被获取，无需在 "),t("code",[a._v("docker-compose.yml")]),a._v(" 中再次设置。")]),a._v(" "),t("p",[a._v("下面分别介绍各个指令的用法。")]),a._v(" "),t("h3",{attrs:{id:"build-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#build-2","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("build")])]),a._v(" "),t("p",[a._v("指定 "),t("code",[a._v("Dockerfile")]),a._v(" 所在文件夹的路径（可以是绝对路径，或者相对 docker-compose.yml 文件的路径）。 "),t("code",[a._v("Compose")]),a._v(" 将会利用它自动构建这个镜像，然后使用这个镜像。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'3'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("webapp")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ./dir\n")])])]),t("p",[a._v("1\n2\n3\n4\n5")]),a._v(" "),t("p",[a._v("你也可以使用 "),t("code",[a._v("context")]),a._v(" 指令指定 "),t("code",[a._v("Dockerfile")]),a._v(" 所在文件夹的路径。")]),a._v(" "),t("p",[a._v("使用 "),t("code",[a._v("dockerfile")]),a._v(" 指令指定 "),t("code",[a._v("Dockerfile")]),a._v(" 文件名。")]),a._v(" "),t("p",[a._v("使用 "),t("code",[a._v("arg")]),a._v(" 指令指定构建镜像时的变量。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'3'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("webapp")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("context")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ./dir\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("dockerfile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Dockerfile"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("alternate\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("args")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("buildno")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n")])])]),t("p",[a._v("1\n2\n3\n4\n5\n6\n7\n8\n9")]),a._v(" "),t("p",[a._v("使用 "),t("code",[a._v("cache_from")]),a._v(" 指定构建镜像的缓存")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("context")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" .\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cache_from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" alpine"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("latest\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" corp/web_app"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.14")]),a._v("\n")])])]),t("p",[a._v("1\n2\n3\n4\n5")]),a._v(" "),t("h3",{attrs:{id:"cap-add-cap-drop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cap-add-cap-drop","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"https://www.funtl.com/zh/docker-compose/Docker-Compose-%E6%A8%A1%E6%9D%BF%E6%96%87%E4%BB%B6.html#cap-add-cap-drop",target:"_blank",rel:"noopener noreferrer"}},[a._v("#"),t("OutboundLink")],1),t("code",[a._v("cap_add, cap_drop")])]),a._v(" "),t("p",[a._v("指定容器的内核能力（capacity）分配。")]),a._v(" "),t("p",[a._v("例如，让容器拥有所有能力可以指定为：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cap_add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ALL\n")])])]),t("p",[a._v("去掉 NET_ADMIN 能力可以指定为：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cap_drop")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" NET_ADMIN\n")])])]),t("h3",{attrs:{id:"command"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#command","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("command")])]),a._v(" "),t("p",[a._v("覆盖容器启动后默认执行的命令。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(' echo "hello world"\n')])])]),t("h3",{attrs:{id:"configs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configs","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("configs")])]),a._v(" "),t("p",[a._v("仅用于 "),t("code",[a._v("Swarm mode")])]),a._v(" "),t("h3",{attrs:{id:"cgroup-parent"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cgroup-parent","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("cgroup_parent")])]),a._v(" "),t("p",[a._v("指定父 "),t("code",[a._v("cgroup")]),a._v(" 组，意味着将继承该组的资源限制。")]),a._v(" "),t("p",[a._v("例如，创建了一个 cgroup 组名称为 "),t("code",[a._v("cgroups_1")]),a._v("。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cgroup_parent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" cgroups_1\n")])])]),t("h3",{attrs:{id:"container-name"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#container-name","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("container_name")])]),a._v(" "),t("p",[a._v("指定容器名称。默认将会使用 "),t("code",[a._v("项目名称_服务名称_序号")]),a._v(" 这样的格式。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("container_name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" docker"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("web"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("container\n")])])]),t("blockquote",[t("p",[a._v("注意: 指定容器名称后，该服务将无法进行扩展（scale），因为 Docker 不允许多个容器具有相同的名称。")])]),a._v(" "),t("h3",{attrs:{id:"deploy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deploy","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("deploy")])]),a._v(" "),t("p",[a._v("仅用于 "),t("code",[a._v("Swarm mode")])]),a._v(" "),t("h3",{attrs:{id:"devices"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#devices","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("devices")])]),a._v(" "),t("p",[a._v("指定设备映射关系。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("devices")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/dev/ttyUSB1:/dev/ttyUSB0"')]),a._v("\n")])])]),t("h3",{attrs:{id:"depends-on"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#depends-on","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("depends_on")])]),a._v(" "),t("p",[a._v("解决容器的依赖、启动先后的问题。以下例子中会先启动 "),t("code",[a._v("redis")]),a._v(" "),t("code",[a._v("db")]),a._v(" 再启动 "),t("code",[a._v("web")])]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'3'")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("web")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" .\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("depends_on")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" db\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" redis\n\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("redis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" redis\n\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("db")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" postgres\n")])])]),t("blockquote",[t("p",[a._v("注意："),t("code",[a._v("web")]),a._v(" 服务不会等待 "),t("code",[a._v("redis")]),a._v(" "),t("code",[a._v("db")]),a._v(" 「完全启动」之后才启动。")])]),a._v(" "),t("h3",{attrs:{id:"dns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dns","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("dns")])]),a._v(" "),t("p",[a._v("自定义 "),t("code",[a._v("DNS")]),a._v(" 服务器。可以是一个值，也可以是一个列表。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("dns")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 8.8.8.8\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("dns")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" 8.8.8.8\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" 114.114.114.114\n")])])]),t("h3",{attrs:{id:"dns-search"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dns-search","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("dns_search")])]),a._v(" "),t("p",[a._v("配置 "),t("code",[a._v("DNS")]),a._v(" 搜索域。可以是一个值，也可以是一个列表。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("dns_search")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" example.com\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("dns_search")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" domain1.example.com\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" domain2.example.com\n")])])]),t("h3",{attrs:{id:"tmpfs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tmpfs","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("tmpfs")])]),a._v(" "),t("p",[a._v("挂载一个 tmpfs 文件系统到容器。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("tmpfs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" /run\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("tmpfs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" /run\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" /tmp\n")])])]),t("h3",{attrs:{id:"env-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#env-file","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("env_file")])]),a._v(" "),t("p",[a._v("从文件中获取环境变量，可以为单独的文件路径或列表。")]),a._v(" "),t("p",[a._v("如果通过 "),t("code",[a._v("docker-compose -f FILE")]),a._v(" 方式来指定 Compose 模板文件，则 "),t("code",[a._v("env_file")]),a._v(" 中变量的路径会基于模板文件路径。")]),a._v(" "),t("p",[a._v("如果有变量名称与 "),t("code",[a._v("environment")]),a._v(" 指令冲突，则按照惯例，以后者为准。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("env_file: .env\n\nenv_file:\n  - ./common.env\n  - ./apps/web.env\n  - /opt/secrets.env\n")])])]),t("p",[a._v("环境变量文件中每一行必须符合格式，支持 "),t("code",[a._v("#")]),a._v(" 开头的注释行。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# common.env: Set development environment")]),a._v("\nPROG_ENV"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("development\n")])])]),t("h3",{attrs:{id:"environment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#environment","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("environment")])]),a._v(" "),t("p",[a._v("设置环境变量。你可以使用数组或字典两种格式。")]),a._v(" "),t("p",[a._v("只给定名称的变量会自动获取运行 Compose 主机上对应变量的值，可以用来防止泄露不必要的数据。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("RACK_ENV")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" development\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("SESSION_SECRET")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" RACK_ENV=development\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" SESSION_SECRET\n")])])]),t("p",[a._v("如果变量名称或者值中用到 "),t("code",[a._v("true|false，yes|no")]),a._v(" 等表达 "),t("a",{attrs:{href:"http://yaml.org/type/bool.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("布尔"),t("OutboundLink")],1),a._v(" 含义的词汇，最好放到引号里，避免 YAML 自动解析某些内容为对应的布尔语义。这些特定词汇，包括")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("y"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("Y"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("yes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("Yes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("YES"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("N"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("no"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("No"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("NO"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("True"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("TRUE"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("False"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("FALSE"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("on"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("On"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("ON"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("off"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("Off"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("OFF\n")])])]),t("h3",{attrs:{id:"expose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expose","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("expose")])]),a._v(" "),t("p",[a._v("暴露端口，但不映射到宿主机，只被连接的服务访问。")]),a._v(" "),t("p",[a._v("仅可以指定内部端口为参数")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("expose")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"3000"')]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"8000"')]),a._v("\n")])])]),t("h3",{attrs:{id:"external-links"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#external-links","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("external_links")])]),a._v(" "),t("blockquote",[t("p",[a._v("注意：不建议使用该指令。")])]),a._v(" "),t("p",[a._v("链接到 "),t("code",[a._v("docker-compose.yml")]),a._v(" 外部的容器，甚至并非 "),t("code",[a._v("Compose")]),a._v(" 管理的外部容器。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("external_links")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" redis_1\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" project_db_1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("mysql\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" project_db_1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("postgresql\n")])])]),t("h3",{attrs:{id:"extra-hosts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#extra-hosts","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("extra_hosts")])]),a._v(" "),t("p",[a._v("类似 Docker 中的 "),t("code",[a._v("--add-host")]),a._v(" 参数，指定额外的 host 名称映射信息。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("extra_hosts")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"googledns:8.8.8.8"')]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"dockerhub:52.1.157.61"')]),a._v("\n")])])]),t("p",[a._v("会在启动后的服务容器中 "),t("code",[a._v("/etc/hosts")]),a._v(" 文件中添加如下两条条目。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("8.8.8.8 googledns\n52.1.157.61 dockerhub\n")])])]),t("h3",{attrs:{id:"healthcheck"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#healthcheck","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("healthcheck")])]),a._v(" "),t("p",[a._v("通过命令检查容器是否健康运行。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("healthcheck")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"CMD"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"curl"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-f"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"http://localhost"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("interval")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 1m30s\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("timeout")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 10s\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("retries")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n")])])]),t("h3",{attrs:{id:"image"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#image","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("image")])]),a._v(" "),t("p",[a._v("指定为镜像名称或镜像 ID。如果镜像在本地不存在，"),t("code",[a._v("Compose")]),a._v(" 将会尝试拉取这个镜像。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ubuntu\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" orchardup/postgresql\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" a4bc65fd\n")])])]),t("h3",{attrs:{id:"labels"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#labels","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("labels")])]),a._v(" "),t("p",[a._v("为容器添加 Docker 元数据（metadata）信息。例如可以为容器添加辅助说明信息。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("com.startupteam.description")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"webapp for a startup team"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("com.startupteam.department")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"devops department"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("com.startupteam.release")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"rc3 for v1.0"')]),a._v("\n")])])]),t("h3",{attrs:{id:"links"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#links","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("links")])]),a._v(" "),t("blockquote",[t("p",[a._v("注意：不推荐使用该指令。")])]),a._v(" "),t("h3",{attrs:{id:"logging"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#logging","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("logging")])]),a._v(" "),t("p",[a._v("配置日志选项。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("logging")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("driver")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" syslog\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("options")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("syslog-address")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tcp://192.168.0.42:123"')]),a._v("\n")])])]),t("p",[a._v("目前支持三种日志驱动类型。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("driver")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"json-file"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("driver")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"syslog"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("driver")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"none"')]),a._v("\n")])])]),t("p",[t("code",[a._v("options")]),a._v(" 配置日志驱动的相关参数。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("options")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("max-size")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"200k"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("max-file")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"10"')]),a._v("\n")])])]),t("h3",{attrs:{id:"network-mode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#network-mode","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("network_mode")])]),a._v(" "),t("p",[a._v("设置网络模式。使用和 "),t("code",[a._v("docker run")]),a._v(" 的 "),t("code",[a._v("--network")]),a._v(" 参数一样的值。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("network_mode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bridge"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("network_mode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"host"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("network_mode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"none"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("network_mode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"service:[service name]"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("network_mode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"container:[container name/id]"')]),a._v("\n")])])]),t("h3",{attrs:{id:"networks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#networks","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("networks")])]),a._v(" "),t("p",[a._v("配置容器连接的网络。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"3"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("some-service")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("networks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" some"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("network\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" other"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("network\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("networks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("some-network")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("other-network")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n`pid`\n")])])]),t("p",[a._v("跟主机系统共享进程命名空间。打开该选项的容器之间，以及容器和宿主机系统之间可以通过进程 ID 来相互访问和操作。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("pid")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"host"')]),a._v("\n")])])]),t("h3",{attrs:{id:"ports"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ports","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("ports")])]),a._v(" "),t("p",[a._v("暴露端口信息。")]),a._v(" "),t("p",[a._v("使用宿主端口：容器端口 "),t("code",[a._v("(HOST:CONTAINER)")]),a._v(" 格式，或者仅仅指定容器的端口（宿主将会随机选择端口）都可以。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"3000"')]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"8000:8000"')]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"49100:22"')]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"127.0.0.1:8001:8001"')]),a._v("\n")])])]),t("p",[t("em",[a._v("注意：当使用 HOST:CONTAINER 格式来映射端口时，如果你使用的容器端口小于 60 并且没放到引号里，可能会得到错误结果，因为 YAML 会自动解析 xx:yy 这种数字格式为 60 进制。为避免出现这种问题，建议数字串都采用引号包括起来的字符串格式。")])]),a._v(" "),t("h3",{attrs:{id:"secrets"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#secrets","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("secrets")])]),a._v(" "),t("p",[a._v("存储敏感数据，例如 "),t("code",[a._v("mysql")]),a._v(" 服务密码。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"3.1"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mysql")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" mysql\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("MYSQL_ROOT_PASSWORD_FILE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" /run/secrets/db_root_password\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("secrets")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" db_root_password\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" my_other_secret\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("secrets")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("my_secret")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("file")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ./my_secret.txt\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("my_other_secret")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("external")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n")])])]),t("h3",{attrs:{id:"security-opt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#security-opt","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("security_opt")])]),a._v(" "),t("p",[a._v("指定容器模板标签（label）机制的默认属性（用户、角色、类型、级别等）。例如配置标签的用户名和角色名。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("security_opt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" label"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("USER\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" label"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("role"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("ROLE\n")])])]),t("h3",{attrs:{id:"stop-signal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stop-signal","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("stop_signal")])]),a._v(" "),t("p",[a._v("设置另一个信号来停止容器。在默认情况下使用的是 SIGTERM 停止容器。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("stop_signal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" SIGUSR1\n")])])]),t("h3",{attrs:{id:"sysctls"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sysctls","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("sysctls")])]),a._v(" "),t("p",[a._v("配置容器内核参数。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("sysctls")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("net.core.somaxconn")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1024")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("net.ipv4.tcp_syncookies")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("sysctls")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" net.core.somaxconn=1024\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" net.ipv4.tcp_syncookies=0\n")])])]),t("h3",{attrs:{id:"ulimits"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ulimits","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("ulimits")])]),a._v(" "),t("p",[a._v("指定容器的 ulimits 限制值。")]),a._v(" "),t("p",[a._v("例如，指定最大进程数为 65535，指定文件句柄数为 20000（软限制，应用可以随时修改，不能超过硬限制） 和 40000（系统硬限制，只能 root 用户提高）。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ulimits")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("nproc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("65535")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("nofile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("soft")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("20000")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("hard")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("40000")]),a._v("\n")])])]),t("h3",{attrs:{id:"volumes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#volumes","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("code",[a._v("volumes")])]),a._v(" "),t("p",[a._v("数据卷所挂载路径设置。可以设置宿主机路径 （"),t("code",[a._v("HOST:CONTAINER")]),a._v("） 或加上访问模式 （"),t("code",[a._v("HOST:CONTAINER:ro")]),a._v("）。")]),a._v(" "),t("p",[a._v("该指令中路径支持相对路径。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" /var/lib/mysql\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" cache/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/tmp/cache\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ~/configs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/etc/configs/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("ro\n")])])]),t("h3",{attrs:{id:"其它指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其它指令","aria-hidden":"true"}},[a._v("#")]),a._v(" 其它指令")]),a._v(" "),t("p",[a._v("此外，还有包括 "),t("code",[a._v("domainname, entrypoint, hostname, ipc, mac_address, privileged, read_only, shm_size, restart, stdin_open, tty, user, working_dir")]),a._v(" 等指令，基本跟 "),t("code",[a._v("docker run")]),a._v(" 中对应参数的功能一致。")]),a._v(" "),t("p",[a._v("指定服务容器启动后执行的入口文件。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("entrypoint")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" /code/entrypoint.sh\n")])])]),t("p",[a._v("指定容器中运行应用的用户名。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("user")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" nginx\n")])])]),t("p",[a._v("指定容器中工作目录。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("working_dir")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" /code\n")])])]),t("p",[a._v("指定容器中搜索域名、主机名、mac 地址等。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("domainname")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" your_website.com\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("hostname")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" test\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mac_address")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 08"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("00"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("27"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("00"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("0C"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("0A\n")])])]),t("p",[a._v("允许容器中运行一些特权命令。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("privileged")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n")])])]),t("p",[a._v("指定容器退出后的重启策略为始终重启。该命令对保持服务始终运行十分有效，在生产环境中推荐配置为 "),t("code",[a._v("always")]),a._v(" 或者 "),t("code",[a._v("unless-stopped")]),a._v("。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("restart")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" always\n")])])]),t("p",[a._v("以只读模式挂载容器的 root 文件系统，意味着不能对容器内容进行修改。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("read_only")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n")])])]),t("p",[a._v("打开标准输入，可以接受外部输入。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("stdin_open")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n")])])]),t("p",[a._v("模拟一个伪终端。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("tty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n")])])]),t("h3",{attrs:{id:"读取变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#读取变量","aria-hidden":"true"}},[a._v("#")]),a._v(" 读取变量")]),a._v(" "),t("p",[a._v("Compose 模板文件支持动态读取主机的系统环境变量和当前目录下的 "),t("code",[a._v(".env")]),a._v(" 文件中的变量。")]),a._v(" "),t("p",[a._v("例如，下面的 Compose 文件将从运行它的环境中读取变量 "),t("code",[a._v("${MONGO_VERSION}")]),a._v(" 的值，并写入执行的指令中。")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"3"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("db")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mongo:${MONGO_VERSION}"')]),a._v("\n")])])]),t("p",[a._v("如果执行 "),t("code",[a._v("MONGO_VERSION=3.2 docker-compose up")]),a._v(" 则会启动一个 "),t("code",[a._v("mongo:3.2")]),a._v(" 镜像的容器；如果执行 "),t("code",[a._v("MONGO_VERSION=2.8 docker-compose up")]),a._v(" 则会启动一个 "),t("code",[a._v("mongo:2.8")]),a._v(" 镜像的容器。")]),a._v(" "),t("p",[a._v("若当前目录存在 "),t("code",[a._v(".env")]),a._v(" 文件，执行 "),t("code",[a._v("docker-compose")]),a._v(" 命令时将从该文件中读取变量。")]),a._v(" "),t("p",[a._v("在当前目录新建 "),t("code",[a._v(".env")]),a._v(" 文件并写入以下内容。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 支持 # 号注释")]),a._v("\nMONGO_VERSION"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("3.6\n")])])]),t("p",[a._v("执行 "),t("code",[a._v("docker-compose up")]),a._v(" 则会启动一个 "),t("code",[a._v("mongo:3.6")]),a._v(" 镜像的容器。")])])},[],!1,null,null,null);s.default=r.exports}}]);